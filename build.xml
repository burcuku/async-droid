<project name="AndroidAppScheduleEnumerator" default="app">
  <description>
    A tool for concurrency testing of Android apps.
  </description>

  <property file="local.properties"/>
  <property file="project.properties"/>

  <property environment="env"/>

  <condition property="android.sdk" value="${env.ANDROID_HOME}">
    <isset property="env.ANDROID_HOME" />
  </condition>

  <condition property="android.api.version" value="${env.ANDROID_API_VERSION}">
    <isset property="env.ANDROID_API_VERSION" />
  </condition>

  <fail unless="android.sdk">
    Android SDK not found.
    Make sure to either set the android.sdk property in local.properties,
    or to set the ANDROID_HOME environment variable.
  </fail>

  <fail unless="android.api.version">
    Android API version unknown.
    Make sure to either set an android.api.version property in local.properties,
    or to set the ANDROID_API_VERSION environment variable.
  </fail>

  <property name="android.jar" location="${android.sdk}/platforms/android-${android.api.version}/android.jar"/>

  <basename property="app-name" file="${apk}" suffix=".apk"/>

  <property name="src" location="src"/>
  <property name="lib" location="lib"/>
  <property name="bin" location="bin"/>
  <property name="build" location="build"/>
  <property name="output" location="logcatOutputs"/>

  <property name="tester-app" location="tester-app"/>
  <property name="tester-apk" location="${build}/TestApk.apk"/>

  <property name="key-alias" value="my_alias"/>
  <property name="key-store" value="${build}/my.keystore"/>
  <property name="key-storepass" value="abcdefg"/>
  <property name="key-pass" value="abcdefg"/>

  <available property="keystore-generated" file="${build}/my.keystore"/>

  <uptodate property="instrumented-app-up-to-date"
            targetfile="${build}/${app-name}.apk">
    <srcresources>
      <file file="${apk}"/>
      <fileset dir="${src}">
        <include name="**/*.java"/>
      </fileset>
      <file file="${build}/instrumentor.jar"/>
      <file file="${build}/scheduler.jar"/>
    </srcresources>
  </uptodate>

  <uptodate property="tester-apk-up-to-date"
            targetfile="${tester-apk}">
    <srcfiles dir="${tester-app}">
      <exclude name="bin/**"/>
      <exclude name="res/**"/>
    </srcfiles>
  </uptodate>

  <target name="app" depends="instrument-app,compile-tester" if="apk"/>

  <target name="compile">
    <mkdir dir="${build}"/>
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement path="${android.jar}"/>
        <pathelement path="${lib}/dx.jar"/>
        <pathelement path="${lib}/soot.jar"/>
      </classpath>
    </javac>
    <jar destfile="${build}/scheduler.jar" basedir="${build}" includes="myScheduler/**"/>
    <jar destfile="${build}/instrumentor.jar" basedir="${build}" includes="myInstrumentor/**">
      <manifest>
        <attribute name="Main-Class" value="myInstrumentor.MyBodyTransformer"/>
      </manifest>
    </jar>
    <java jar="${lib}/dx.jar" fork="true">
      <arg value="--dex"/>
      <arg value="--output=${build}/scheduler.dex"/>
      <arg value="${build}/scheduler.jar"/>
    </java>
  </target>

  <target name="instrument-app" depends="compile,generate-keystore"
          if="apk"
          unless="instrumented-app-up-to-date">

    <echo message="(Re)instrumenting ${app-name}"/>
    <unzip src="${apk}" dest="${build}/${app-name}-extracted"/>
    <java jar="${lib}/apktool.jar" fork="true">
      <arg value="d"/>
      <arg value="-f"/>
      <arg value="${apk}"/>
      <arg value="${build}/${app-name}-decoded"/>
    </java>
    <mkdir dir="${build}/${app-name}-merged"/>
    <java classname="com.android.dx.merge.DexMerger" classpath="${lib}/dx.jar">
      <arg value="${build}/${app-name}-merged/classes.dex"/>
      <arg value="${build}/${app-name}-extracted/classes.dex"/>
      <arg value="${build}/scheduler.dex"/>
    </java>
    <exec executable="aapt" dir="${build}/${app-name}-merged">
      <arg value="package"/>
      <arg value="-f"/>
      <arg value="-M"/>
      <arg value="${build}/${app-name}-decoded/AndroidManifest.xml"/>
      <arg value="-S"/>
      <arg value="${build}/${app-name}-decoded/res/"/>
      <arg value="-I"/>
      <arg value="${android.jar}"/>
      <arg value="--min-sdk-version"/>
      <arg value="${android.api.version}"/>
      <arg value="--target-sdk-version"/>
      <arg value="${android.api.version}"/>
      <arg value="-F"/>
      <arg value="${build}/${app-name}.apk"/>
    </exec>
    <exec executable="aapt" dir="${build}/${app-name}-merged">
      <arg value="add"/>
      <arg value="-f"/>
      <arg value="${build}/${app-name}.apk"/>
      <arg value="classes.dex"/>
    </exec>
    <delete dir="sootOutput"/>
    <java classname="myInstrumentor.MyBodyTransformer">
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement path="${android.jar}"/>
        <pathelement path="${build}/instrumentor.jar"/>
        <pathelement path="${lib}/soot.jar"/>
      </classpath>
      <arg value="${build}/${app-name}.apk"/>
      <arg value="${android.sdk}/platforms"/>
    </java>
    <move file="sootOutput/${app-name}.apk" tofile="${build}/${app-name}.apk"/>
    <delete dir="sootOutput"/>
    <signjar jar="${build}/${app-name}.apk"
      alias="${key-alias}" keystore="${key-store}"
      storepass="${key-storepass}" keypass="${key-pass}"/>
    <echo message="Instrumented ${app-name} is ${build}/${app-name}.apk"/>
  </target>

  <target name="compile-tester" depends="generate-keystore"
          unless="tester-apk-up-to-date">

    <echo message="(Re)compiling tester app."/>
    <exec executable="android" dir="${tester-app}">
      <arg value="update"/>
      <arg value="project"/>
      <arg value="-p"/>
      <arg value="."/>
    </exec>
    <ant dir="${tester-app}" target="release"/>
    <copy file="${tester-app}/bin/TestApk-release-unsigned.apk"
      tofile="${tester-apk}"/>
    <signjar jar="${tester-apk}"
      alias="${key-alias}" keystore="${key-store}"
      storepass="${key-storepass}" keypass="${key-pass}"/>
    <echo message="Tester app is ${tester-app}"/>
  </target>

  <target name="generate-keystore" unless="keystore-generated">
    <echo message="Regenerating keystore ${key-store}"/>
    <exec executable="keytool">
      <arg value="-genkey"/>
      <arg value="-keyalg"/>
      <arg value="RSA"/>
      <arg value="-keysize"/>
      <arg value="2048"/>
      <arg value="-validity"/>
      <arg value="10000"/>
      <arg value="-noprompt"/>
      <arg value="-dname"/>
      <arg value="CN=a, OU=b, O=c, L=d, S=e, C=f"/>
      <arg value="-alias"/>
      <arg value="${key-alias}"/>
      <arg value="-keystore"/>
      <arg value="${key-store}"/>
      <arg value="-storepass"/>
      <arg value="${key-storepass}"/>
      <arg value="-keypass"/>
      <arg value="${key-pass}"/>
    </exec>
  </target>

  <target name="clean" description="Delete all generated files." >
    <delete dir="${build}"/>
    <delete dir="${output}"/>
    <ant dir="tester-app" target="clean"/>
  </target>
</project>
